{"remainingRequest":"/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css","dependencies":[{"path":"/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/src/components/HelloWorld.vue","mtime":1680701357552},{"path":"/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hY3RpdmV7CiAgY29sb3I6IGdyZWVuOwp9Ci5lcnJvcnsKICBjb2xvcjogZ3JheTsKfQo="},{"version":3,"sources":["/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/src/components/HelloWorld.vue"],"names":[],"mappings":";AAuDA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"/home/devarshi.trivedi/training/training/Devarshi_Trivedi/Practice/Vue_practices/starter/src/components/HelloWorld.vue","sourceRoot":"","sourcesContent":["<template>\n  <button v-on:[attr]=\"clik\">Show</button>\n  <div v-if=\"disable\">\n    <span>Message is: {{ disable.value ? 'This is not be seen': 'This will be seen' }}</span>\n    <span v-html=\"rawhtml\"></span>\n  </div>\n  <button @click=\"increment\">count: {{ state.count }}, {{ count }}</button>\n  <span v-show=\"true\"> Value is: {{ value }},{{ dateN}}</span>\n  <div :class=\"{'active':isActive, 'error':hasError}\">dfssdfdsfds</div>\n  <div>\n  <ul>\n    <li v-for=\"value in myObject\" :key=\"value.title\">\n      {{ value }}\n    </li>\n  </ul>\n  </div>\n  <input @key.left=\"keyCouer.value++\"/>\n  <span>{{ keyCouer }}</span>\n  <hr />\n\n</template>\n\n<script setup>\nimport {reactive, ref, computed} from 'vue'\nconst myObject = reactive({\n  title: 'How to do lists in Vue',\n  author: 'Jane Doe',\n  publishedAt: '2016-04-10'\n})\nlet attr = 'click'\nconst disable=ref(true);\nconst isActive=ref(true);\nconst hasError=ref(false);\nlet a=ref(1),b=ref(2);\nconst value = computed(()=>{\n  return a.value+b.value;\n})\nconst rawhtml = \"<br /><span style=\\\"color:red;\\\">This should be red</span>\";\na.value=10;\nfunction clik(){\n  disable.value=!disable.value;\n}\nlet keyCouer = ref(0);\nconst state = reactive({ count: 10 })\n\nfunction increment() {\n  state.count++\n}\n//const dateN = ref(Date.now())\n//const date = computed(()=>dateN);\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.active{\n  color: green;\n}\n.error{\n  color: gray;\n}\n</style>\n"]}]}